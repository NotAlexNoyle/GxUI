plugins {
	
    id 'java' // Tell gradle this is a java project.
    id 'com.github.johnrengelman.shadow' version '8.1.1' // Import utility to package libraries into .jar file.
    id 'eclipse' // Import eclipse plugin for IDE integration.
    id 'maven-publish' // Import maven publish repo for Jitpack.

}

java {
 
	// Declare java version.
 	sourceCompatibility = JavaVersion.VERSION_17

}

group = "uk.hotten.gxui" // Declare bundle identifier.
version = "1.3.1" // Declare plugin version (will be in .jar).

def apiVersion = "1.19" // Declare minecraft server target version.

processResources {

    def props = [
        version: version,
        apiVersion: apiVersion,
    ]

    inputs.properties props // Indicates to rerun if version changes.

    filesMatching("plugin.yml") {

        expand props

    }

}

repositories {

    mavenCentral()

    maven {

        url "https://repo.purpurmc.org/snapshots" // Get purpur API from purpur maven repository.

    }
    
    maven {
    
        url "https://jitpack.io"
    
    }

}

dependencies {

    compileOnly "org.purpurmc.purpur:purpur-api:1.19.4-R0.1-SNAPSHOT" // Declare purpur API version to be packaged.
    implementation 'com.github.cnie109:Utilities-OG:c1c6c4ac33' // Import Utilities-OG API.

	// Import project lombok.
	compileOnly 'org.projectlombok:lombok:1.18.30'
	annotationProcessor 'org.projectlombok:lombok:1.18.30'

	testCompileOnly 'org.projectlombok:lombok:1.18.30'
	testAnnotationProcessor 'org.projectlombok:lombok:1.18.30'

}

shadowJar {

    minimize()
    
}

jar.dependsOn shadowJar

tasks.jar.configure {

    archiveClassifier = "part"

}

tasks.shadowJar.configure {

    archiveClassifier = null

}

tasks.withType(JavaCompile).configureEach {

    options.compilerArgs += ["-parameters"]
    options.encoding = 'UTF-8' // Override the system character set with a universal set.
    options.fork = true // Enable compilation in a separate daemon process.

}

publishing {
    repositories {
        maven {
            name = "hottenRepo"
            url = "https://repo.hotten.cloud/releases"
            credentials(PasswordCredentials)
            authentication {
                basic(BasicAuthentication)
            }
        }
    }
    publications {
        maven(MavenPublication) {
            groupId = "uk.hotten.gxui"
            artifactId = "gxui"
            version = "1.3.1"
            from components.java
        }
    }
}
